name: Firebase - Android Beta Build

# Manual deployment
on: workflow_dispatch

jobs:
  firebase-build:
    name: android-beta-build-firebase
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      # Setup Node
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # Checkout the Repository
      - name: Checkout Git Repository
        uses: actions/checkout@v3

      # Setup Caching for our Gradle Builds (I have trimmed 5 minutes off of my 12 minutes builds by using this)
      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      # More Gradle Caching
      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-
      # Update our Google Service File
      - name: Setup Firebase File
        run: echo "${{ secrets.PROD_ANDROID_FIREBASE_FILE }}" > ./android/app/google-services.json

      # I have a script that generates an environment file based on what environment I point to. I am setting up the
      # production one here. It points to my production API's and does some other stuff.
      - name: Setup Environment File
        run: npm run env:prod

      # Setup our Production Keystore file
      - name: Setup Keystore File
        run: echo "${{secrets.ANDROID_KEYSTORE_FILE}}" | base64 -d > "${{ github.workspace }}/production.keystore"

      # Setup our Firebase Service Account file
      - name: Setup Service Account Credential Files
        run: echo "${{secrets.FIREBASE_SERVICE_ACCOUNT_JSON}}" > "${{ github.workspace }}/firebase-service-account.json"

      # Install NPM Packages
      - name: Install npm Dependencies
        run: npm install

      # Setup Ruby while Caching Gems
      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.2
          bundler-cache: true

      # Install fastlane
      - name: Install Fastlane
        run: gem install fastlane

      # Setup Fastlane Plugins
      - name: Add Fastlane Plugins
        run: |
          fastlane add_plugin increment_version_code
          fastlane add_plugin firebase_app_distribution
      # Finally, build and release (calls the android firebase lane in our fastfile)
      - name: Build and Upload to Firebase
        uses: maierj/fastlane-action@v3.0.0
        with:
          lane: 'android firebase'
          bundler-cache: true
        env:
          ANDROID_KEYSTORE_FILE: '${{ github.workspace }}/production.keystore'
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEYSTORE_ALIAS: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
          FIREBASE_ANDROID_APP_ID: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
